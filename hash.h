#include<cstdlib>
#include<iostream>
#include <vector>
class hash{
    public: 
        void sha(const std::string &data);
        void print_hash();
    private:
        std::string data;
        std::vector<std::string> _hash;
        std::vector<std::string> dectobinary(int base, int number);
        int string_to_integer(int w);
        //hash_array consists of binary representation of the first 32 bits of the fractional parts of the square roots of the first 8 primes
        std::string hash_array[8]={ "01101010000010011110011001100111",
                                    "10111011011001111010111010000101",
                                    "00111100011011101111001101110010",
                                    "10100101010011111111010100111010",
                                    "01010001000011100101001001111111",
                                    "10011011000001010110100010001100",
                                    "00011111100000111101100110101011",
                                    "01011011111000001100110100011001"};
        //fractional parts of the cube roots of the first 64 primes
        std::string hash_constants[64]={"100101000101010111110011000", "11111111110010010011", "1011101110001111101111001111", "111010011011101110110111010101", "1110011011101100101011011", "1011001111111111111", "1001101111111000101010100", "101010111110010111101101101", "1101100001111010101010011000", "110100011101101101", "10100111100010110111110", "101101011001111101110011", "11110101111101011101111100", "10000110111101011111111110", "100110111101110001101010111", "110011001101111111111100", "111010010011011110100111001", "11101111101111101001111000110", "0111111001100111011100110", "10100011001010111001100", "101101111010011011001101111", "1001010111100100010010101010", "1011100101101010100111011100", "111110111110011000100011011010", "10011000111110101110110", "1010100011111001101101101", "101100111011111001000", "10111111101100111111111100111", "11001101110001011111111", "1101101101011110011100111", "011011001010110111011", "1100101001101001110111", "101111011111010101000101", "10111011011101111000", "1001101101100110110111111100", "1011111100001101111", "1101010101011111101100", "11111011010100101010111011", "1000111001011001001101110", "100110111101011001000101", "101010101111111110100010101", "10101000110101101101001011", "1100101001011100010111110", "110011111011001011101011", "110111001101110100011001", "110111010011001011010100", "111110001110111011000101", "101101010101001110", "110011010100110011110", "1111011111110110001000", "1011110010001111111001100", "1110010110101111001011101", "1110011110001100101111", "100111011011000101010101001010", "101101110011100110010101001111", "11010001011101101111111111", "1111001000111110001011101110", "11110001010101110111101111", "10001001100100011110001100", "10001100110011101001000", "10010101111101111111111111010", "10101001010110110011101011", "10111110111110011010111111111", "110011011111111000111110"};
};
        